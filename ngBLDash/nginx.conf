# Put your OSX username here in place of EXAMPLE
# Unless you've done interesting things with your user's group, it's probably 'staff'
user  root root;

worker_processes  1;

# Note: you may have to manually create this folder and file
error_log  /var/log/nginx/error.log;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server {
        # Listen on port 80 (normal http)
        listen 8081;

        # The value of server_name can just be `localhost`,
        # but if you want a more contextual URL, make sure to add a row
        # in your /etc/hosts file like `127.0.0.1  example.local`
        server_name localhost;

        # This is the path to the project you want to host
        # Make sure there's an index file of some kind in the directory you're pointing to
        root /usr/share/nginx/html ;

        # This bit tells nginx how to serve files that are in /css and /img
        # This is necessary since we're using Angular
        #  - if you aren't hosting any single page webapps, you probably won't need this
        location ~ ^/(css|img) {
          gzip_static on;

          # Don't cache anything
          expires -1;
          add_header Pragma "no-cache";
          add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";

          break;
        }

        # For everything that isn't in /css or /img
        location / {

          # This tells NGINX to first find and serve a file specified by the uri,
          # otherwise go to index.html.
          try_files $uri /index.html;

          # Don't cache anything
          expires off;
          add_header Pragma "no-cache";
          add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        }
    }
}